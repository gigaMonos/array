Отличния массива от блока заключаеться в том. что 
в масссиве не используются ключи 
значения могут быть разнообразными 
многомерные массивы это массив в котором каждый элимент массива это отдельный  маассив со своими значениями 
вызвать значение в консоль ожно с помощью квадратных скобок
указав в них порядковый номер значения 
Нумерация позиций начинается с нуля 
если нужно вызвать элимеент блока то после номера значения через точку нужно указать клбюч блока
Вызов значений в многомерных массивах происходят след образом
в первых квадратных скобках указыватся номер массива , 
а во вторых ключ который мы хотим получить 
let matrix = [
    ["aloha, my name is Niccky", 32, 3],
    [4, 5, 6],
    [7, 8, 9],
];
console.log(matrix);
console.log(matrix[0][0]); 
//в нулевой массиве найти нулевое значение

еще одной отличительной ччетрой массива есь свойствл ленгс (длинна массива)
с помощью лепг мы также можем менять размер массива и удалять нужные элименты
массив ведет себяточно также как блок (копируется как блок)
длинна считается с еденицы

ВАрианты применения методов работы  массивов
- первый вариант - это очеред или упорядоченая колекция элиментов 
очеред поддерживает два вида операций:
1. доьавление элимента в конец очереди 
2. удаление элимента в начале сдвигая очередь вперед, 
второй элимент становится первым и т.д 

Второй вариант методов для массивов - стркутура данных, называемая стек 
Стек поддерживает два вида операций:
1. добавления элимента в конец
2. удаление последнего элимента

Массивы в JS  могут работать как очередь и ак  стек.
Мы можем добавлять / удалять элименты как в начало так и в конец массива 
и в этомм нам помогут методы:

Методы pop /push выполняются быстро. а методы shift /unshfit медленно (смотри сохраненный скрин)

//удаление/добавление/изминение конкретных элименов
let arrDell = [
    'Ser',
    'Madam', 
    'Mister',
];
delete arrDell[1];
console.log(arrDell); 
console.log(arrDell[1]);
console.log(arrDell.length);
при таком удаление образуется пустое место вместо удаленного элимента 
при попытки вызвать удаленный элиеммент - вернеться андефайнед 
длинна (свойство ленг) останеться прежним (учитывая пустое место после удаленного элимента)

//Contac метод создает новый массив , с котторого копирует данные из других массивов
 и добавляет новые дополнительный значения (в конец массива)
 Метод indexOff ищет элемент в массиве начиная с указанной позиции и возвращает (номер значения) позицию в кором нашлось совпадение, или 
возвращает - 1 в случае если совпадение не было обнаруженно 
подсчет позиции начинается с нуля
метод Includes способ проверки наличия элимента в массиве
он возвращает логический тип данны в случаае слвпадения тру, и в случае не совпадения фолс
//Filter метод ищет все элименты на котороые функция калбэк вернет тру 
разница между filter и find в том ,что фильтр не прекращает свою работу после того как нашел все аодходящие элименты, код работает дальше 
возвраащет пустой массив в случае если совпадений не найденно 

Метод //Map  вызывает функцию для каждого элимента массива и возвращает массив результатов выплнения этой функции 

//Метод Split and Join приеобразовывает строку в массив по указанному определителю 
//метод forEach 